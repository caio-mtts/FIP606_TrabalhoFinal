---
title: "Parâmetros Epidemiológicos"
format: html
editor: visual
execute: 
  warning: false
  error: false
  freeze: true
---

## Carregamento dos pacotes

```{r}
library(gsheet) 
library(tidyverse) 
library(DT) 
library(patchwork) 
library(performance) 
library(emmeans)
library(DHARMa)
library(multcomp) 
library(multcompView) 
library(epifitter)
library(r4pde)
library(knitr)
library(kableExtra)
```

# Área Abaixo da Curva de Progresso da Doença

### Importação dos dados - Progresso Temporal da Doença (PTD)

Os dados utilizados nesta análise serão importados de uma planilha google sheet.

```{r}
PTD <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1t1oOnimLXdx6rqtDiYg6wNXB2byY8_Z-/edit#gid=1737712336")

## Mudando os dados de percentagem para proporção
PTD = PTD |> 
  mutate(SEVERIDADE = SEVERIDADE/100)

## Mudando o nome dos tratamentos 
TRATAMENTO <- c("Controle", "Fungicida", "SiS + F", "F SiS F", "SiS F SiS", "SiS")
names(TRATAMENTO) <- c("1", "2", "3", "4", "5", "6") # Mapeando números para nomes de tratamentos

# Atualizar a variável tratamento no data frame
PTD$TRATAMENTO <- factor(PTD$TRATAMENTO, levels = names(TRATAMENTO), labels = TRATAMENTO)
```

### Preparando os dados para análise

Após importação os dados serão manipulados para obtermos a severidade média por experimento, tratamento e tempo.

```{r}
PTD_2 <- PTD %>%
  group_by(EXPERIMENTO, TRATAMENTO, TEMPO) %>% 
  summarise(sev_mean = mean(SEVERIDADE)) %>% 
  mutate(EXPERIMENTO = as.factor(EXPERIMENTO),
         TRATAMENTO = as.factor(TRATAMENTO),
         TEMPO = as.numeric (TEMPO))

head(PTD_2)
```

### Cálculo da área abaixo da curva de progresso da doença

Para calcular a área abaixo da curva de progresso da doença (AACPD), utilizaremos a função `audpc` (**`epifitter`**). Com essa função, manipularemos os dados de modo que, ao final, tenhamos um valor de AACPD para cada ensaio, bloco e tratamento.

```{r}
PTD_3 <- PTD %>%
  dplyr::group_by (EXPERIMENTO, TRATAMENTO, BLOCO) %>% 
  summarise(audpc = AUDPC(TEMPO, SEVERIDADE)) %>% 
  dplyr::mutate(EXPERIMENTO = as.factor(EXPERIMENTO),
                TRATAMENTO = as.factor(TRATAMENTO),
                BLOCO = as.factor(BLOCO))
```

```{r}
head(PTD_3)
```

### Visualização Gráfica

```{r}
theme_set(r4pde::theme_r4pde(font_size = 10))

PTD_3 %>% 
  ggplot(aes(TRATAMENTO, audpc)) +
  geom_jitter(width = 0.3, alpha = 0.6, colour = "darkred", size = 2) +
  stat_summary(fun.data = "mean_cl_boot", color = "black") +
  labs(x = "Tratamentos",
       y = "AACPD") +
  theme(
    axis.title.y = element_text(vjust = +3),
    axis.title.x = element_text(vjust = -1),
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~ EXPERIMENTO, labeller = labeller(EXPERIMENTO = 
    c("1" = "Experimento 1",
      "2" = "Experimento 2")))
```

### Determinação do modelo

Para definir se é possível ou não realizar a análise da varíavel AACPD (audpc) combinando os resultados dos ensaios, será feita uma análise de variância (ANOVA) considerando o experimento (ensaio) como um fator.\

```{r}
PTD_AUDPC <- lm(audpc ~ TRATAMENTO*EXPERIMENTO + BLOCO,
                data = PTD_3)
```

```{r}
anova(PTD_AUDPC)
```

Pela análise de variância, considerando o experimento (ensaio) como um fator, observamos que há interação entre fatores (TRATAMENTO:EXPERIMENTO, valor de probabilidade \< 0.05), logo não será possível analisar a área abaixo da curva de progresso da doença (AACPD - audpc) em conjunto, sendo necessário avaliação dos experimentos individualmente.\

### Cálculo da AACPD por experimento

#### Modelo para análise - AACPD, experimento 1

```{r}
PTD_E1 <- PTD_3 %>% 
  filter(EXPERIMENTO == 1)
```

```{r}
PTD_AUDPC_1 <- lm(audpc ~ TRATAMENTO + BLOCO,
                data = PTD_E1)
```

##### Avaliação das premissas

```{r}
check_normality(PTD_AUDPC_1)
check_heteroscedasticity(PTD_AUDPC_1)
```

Pelo fato de não haver homogeneidade de variâncias entre os grupos, será preciso transformar os dados. Uma alternativa será definir um modelo com o logaritmo da audpc.

##### Modelo transformado e nova avaliação das premissas

```{r}
PTD_AUDPC_1_log <- lm(log(audpc) ~ TRATAMENTO + BLOCO,
                data = PTD_E1)
```

```{r}
check_normality(PTD_AUDPC_1_log)
check_heteroscedasticity(PTD_AUDPC_1_log)
```

```{r}
plot(simulateResiduals(PTD_AUDPC_1_log))
```

Pelos resultados obtidos para as análises de normalidade e homocedasticidade, observamos que os dados atendem às pressuposições da ANOVA. Portanto, não serão necessárias transformações. Assim, podemos prosseguir a análise.

##### ANOVA

```{r}
anova(PTD_AUDPC_1_log)
```

##### Comparação de médias

```{r}
medias_PTD_AUDPC_1 <- emmeans(PTD_AUDPC_1_log, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_1
```

```{r}
cld(medias_PTD_AUDPC_1,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
CV_AUDPC_1 <- agricolae::cv.model(PTD_AUDPC_1) %>% 
  round(digits = 2)
CV_AUDPC_1
```

#### Modelo para análise - AACPD, experimento 2

```{r}
PTD_E2 <- PTD_3 %>% 
  filter(EXPERIMENTO == 2)
```

```{r}
PTD_AUDPC_2 <- lm(audpc ~ TRATAMENTO + BLOCO,
                data = PTD_E2)
```

##### Avaliação das premissas

```{r}
check_normality(PTD_AUDPC_2)
check_heteroscedasticity(PTD_AUDPC_2)
```

Pelo fato de também não haver homogeneidade de variâncias entre os grupos do ensaio dois, será preciso adotar a transformalçao por log para esses dados.\

##### Modelo transformado e nova avaliação das premissas

```{r}
PTD_AUDPC_2_log <- lm(log(audpc) ~ TRATAMENTO + BLOCO,
                data = PTD_E2)
```

```{r}
check_normality(PTD_AUDPC_2_log)
check_heteroscedasticity(PTD_AUDPC_2_log)
```

```{r}
plot(simulateResiduals(PTD_AUDPC_2_log))
```

Apesar dos resultados obtidos pela avaliação do pacote **`DHARMa`** apontarem desvios em relação a homogeneidade das variâncias, os testes realizados pelo pacote **`performance`** demonstram homogeneidade e homocedasticidade. Assim, decidimos prosseguir com as análises.

##### ANOVA

```{r}
anova(PTD_AUDPC_2_log)
```

##### Comparação de médias

```{r}
medias_PTD_AUDPC_2 <- emmeans(PTD_AUDPC_2_log, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_2
```

```{r}
cld(medias_PTD_AUDPC_2,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
CV_AUDPC_2 <- agricolae::cv.model(PTD_AUDPC_2) %>% 
  round(digits = 2)
CV_AUDPC_2
```

#### Tabela da área abaixo da curva de progresso da doença (AACPD)

```{r}
cld_AA1 <- cld(medias_PTD_AUDPC_1,
    Letters = LETTERS)

cld_AA2 <- cld(medias_PTD_AUDPC_2,
    Letters = LETTERS)


table_AA_1 <- cld_AA1 %>% 
  dplyr::select(TRATAMENTO, response, .group) %>% 
  dplyr::arrange(TRATAMENTO) %>% 
  mutate(response = round(response, 2))

table_AA_2 <- cld_AA2 %>% 
  dplyr::select(TRATAMENTO, response, .group)%>% 
  dplyr::arrange(TRATAMENTO) %>% 
  dplyr::mutate(TRATAMENTO = NULL) %>% 
  mutate(response = round(response, 2))


linha_CV <- c('CV',CV_AUDPC_1,' ',CV_AUDPC_2,' ')

combined_table_aa <- cbind(table_AA_1, table_AA_2)
combined_table_aa2 <- rbind(combined_table_aa, linha_CV)

colnames(combined_table_aa2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')

opts <- options(knitr.kable.NA = "CV (%)")

knitr::kable(
    combined_table_aa2,
    align = "cccccc",
    row.names=FALSE,
    booktabs = TRUE, valign = 't') %>%
  add_header_above(c(" " = 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>% 
  add_header_above(c("Área Abaixo da Curva de Progresso da Doença" = 5))
```

# Severidade Final (y)

### Importanto os dados - Parâmetros Epidemiológicos (PE)

```{r}
#| echo: false

PE <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1t1oOnimLXdx6rqtDiYg6wNXB2byY8_Z-/edit#gid=1356638368")

PE = PE |> 
  mutate(SEVERIDADE_FINAL = SEVERIDADE_FINAL/100)

## Mudando o nome dos tratamentos 
TRATAMENTO <- c("Controle", "Fungicida", "SiS + F", "F SiS F", "SiS F SiS", "SiS")
names(TRATAMENTO) <- c("1", "2", "3", "4", "5", "6") # Mapeando números para nomes de tratamentos

# Atualizar a variável TRATAMENTO no data frame PTD1_1$Data para os nomes dos tratamentos
PE$TRATAMENTO <- factor(PE$TRATAMENTO, levels = names(TRATAMENTO), labels = TRATAMENTO)

PE <- PE %>% 
  mutate(EXPERIMENTO = as.factor(EXPERIMENTO),
         TRATAMENTO = as.factor(TRATAMENTO),
         BLOCO = as.factor(BLOCO))

head(PE)
```

### Visualização Gráfica

```{r}
#| echo: false

PE %>% 
  ggplot(aes(TRATAMENTO, SEVERIDADE_FINAL)) +
  geom_jitter(width = 0.3, alpha = 0.6, colour = "darkred", size = 2) +
  stat_summary(fun.data = "mean_cl_boot", color = "black") +
  labs(x = "Tratamentos",
       y = "Severidade Final") +
  theme(
    axis.title.y = element_text(vjust = +3),
    axis.title.x = element_text(vjust = -1),
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~ EXPERIMENTO, labeller = labeller(EXPERIMENTO = 
    c("1" = "Experimento 1",
      "2" = "Experimento 2")))
```

#### Modelo para análise em fatorial

Para definir se é possível ou não realizar a análise da varíavel SEVERIDADE_FINAL combinando os resultados dos ensaios, será feita uma análise de variância (ANOVA) considerando o experimento (ensaio) como um fator.

```{r}
#| echo: false

SF <- lm (SEVERIDADE_FINAL ~ TRATAMENTO*EXPERIMENTO + BLOCO,
          data = PE)
```

```{r}
#| echo: false

anova(SF)
```

Pela ANOVA considerando o experimento (ensaio) como um fator, observamos que há interação entre fatores (TRATAMENTO:EXPERIMENTO, valor de probabilidade \< 0.05), logo não será possível analisar os dados em conjunto, sendo preciso avaliar cada experimento individualmente.\
\

#### Modelo para análise - SF, experimento 1

```{r}
#| echo: false

SF_E1 <- PE %>%
  dplyr::select(EXPERIMENTO:SEVERIDADE_FINAL) %>% 
  filter(EXPERIMENTO == 1)
```

```{r}
#| echo: false
 
SF_1 <- lm (SEVERIDADE_FINAL ~ TRATAMENTO + BLOCO,
          data = SF_E1)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(SF_1)
check_heteroscedasticity(SF_1)
```

\
Pelo fato de não haver homogeneidade de variâncias entre os grupos, será preciso transformar os dados. Uma alternativa será definir um modelo com o logaritmo da severidade final.\
\

##### Modelo transformado e nova avaliação das premissas

```{r}
#| echo: false

SF_1_log <- lm (log(SEVERIDADE_FINAL) ~ TRATAMENTO + BLOCO,
          data = SF_E1)
```

```{r}
#| echo: false

check_normality(SF_1_log)
check_heteroscedasticity(SF_1_log)
```

```{r}
#| echo: false

plot(simulateResiduals(SF_1_log))
```

Pelos resultados obtidos para as análises de normalidade e homocedasticidade, observamos que os dados atendem às pressuposições da ANOVA, com isso podemos prosseguir.

##### ANOVA

```{r}
#| echo: false

anova(SF_1_log)
```

##### Comparação de médias

```{r}
#| echo: false

medias_SF_1 <- emmeans(SF_1_log, ~ TRATAMENTO, type = "response")
medias_SF_1
```

```{r}
#| echo: false

cld(medias_SF_1,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_SF_1 <- agricolae::cv.model(SF_1) %>% 
  round(digits = 2)

CV_SF_1
```

#### Modelo para análise - SF, experimento 2

```{r}
#| echo: false

SF_E2 <- PE %>%
  dplyr::select(EXPERIMENTO:SEVERIDADE_FINAL) %>% 
  filter(EXPERIMENTO == 2)
```

```{r}
#| echo: false

SF_2 <- lm (SEVERIDADE_FINAL ~ TRATAMENTO + BLOCO,
          data = SF_E2)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(SF_2)
check_heteroscedasticity(SF_2)
```

```{r}
#| echo: false

plot(simulateResiduals(SF_2))
```

Pelos resultados obtidos para as análises de normalidade e homocedasticidade, observamos que os dados atendem às pressuposições da ANOVA. Portanto, não serão necessárias transformações como feito anteriormente. Assim, podemos prosseguir a análise.\

##### ANOVA

```{r}
#| echo: false

anova(SF_2)
```

##### Comparação de médias

```{r}
#| echo: false

medias_SF_2 <- emmeans(SF_2, ~ TRATAMENTO)
medias_SF_2
```

```{r}
#| echo: false

cld(medias_SF_2,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_SF_2 <- agricolae::cv.model(SF_2) %>% 
  round(digits = 2)

CV_SF_2
```

#### Tabela da SEVERIDADE_FINAL

```{r}
#| echo: false

cld_SF1 <- cld(medias_SF_1,
    Letters = LETTERS)

cld_SF2 <- cld(medias_SF_2,
    Letters = LETTERS)


table_SF_1 <- cld_SF1 %>% 
  dplyr::select(TRATAMENTO, response, .group) %>% 
  dplyr::arrange(TRATAMENTO) %>% 
  mutate(response = round(response, 2))

table_SF_2 <- cld_SF2 %>% 
  dplyr::select(TRATAMENTO, emmean, .group)%>% 
  dplyr::arrange(TRATAMENTO) %>% 
  dplyr::mutate(TRATAMENTO = NULL) %>% 
  mutate(emmean = round(emmean, 2))


linha_CV <- c('CV',CV_SF_1,' ',CV_SF_2,' ')

combined_table_sf <- cbind(table_SF_1, table_SF_2)
combined_table_sf2 <- rbind(combined_table_sf, linha_CV)

colnames(combined_table_sf2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')

opts <- options(knitr.kable.NA = "CV (%)")

knitr::kable(
    combined_table_sf2,
    align = "cccccc",
    row.names=FALSE,
    booktabs = TRUE, valign = 't') %>%
  add_header_above(c(" " = 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>% 
  add_header_above(c("Severidade Final" = 5))
```

# Desfolha (DF)

### Visualização Gráfica

```{r}
#| echo: false

PE %>% 
  ggplot(aes(TRATAMENTO, SEVERIDADE_FINAL)) +
  geom_jitter(width = 0.3, alpha = 0.5, colour = "darkred", size = 2) +
  stat_summary(fun.data = "mean_cl_boot", color = "black") +
  labs(x = "Tratamentos",
       y = "Desfolha (%)") +
  theme(
    axis.title.y = element_text(vjust = +3),
    axis.title.x = element_text(vjust = -1),
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~ EXPERIMENTO, labeller = labeller(EXPERIMENTO = 
    c("1" = "Experimento 1",
      "2" = "Experimento 2")))
```

#### Modelo para análise em fatorial

Para definir se é possível ou não realizar a análise da varíavel DESFOLHA combinando os resultados dos ensaios, será feita uma análise de variância (ANOVA) considerando o experimento (ensaio) como um fator.

```{r}
#| echo: false

DF <- lm (DESFOLHA ~ TRATAMENTO*EXPERIMENTO + BLOCO,
          data = PE)
```

```{r}
anova(DF)
```

Pela ANOVA considerando o experimento (ensaio) como um fator, observamos que há interação entre fatores (TRATAMENTO:EXPERIMENTO, valor de probabilidade \< 0.05), logo também não será possível analisar os dados em conjunto, sendo preciso avaliar cada experimento individualmente.

#### Modelo para análise - DF, experimento 1

```{r}
#| echo: false

DF_E1 <- PE %>%
  dplyr::select(EXPERIMENTO, TRATAMENTO, BLOCO, DESFOLHA) %>% 
  filter(EXPERIMENTO == 1)
```

```{r}
#| echo: false

DF_1 <- lm (DESFOLHA ~ TRATAMENTO + BLOCO,
            data = DF_E1)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(DF_1)
check_heteroscedasticity(DF_1)
```

```{r}
#| echo: false

plot(simulateResiduals(DF_1))
```

Apesar dos resultados obtidos pela avaliação do pacote **`DHARMa`** apontarem desvios em relação a homogeneidade das variâncias, os testes realizados pelo pacote **`performance`** demonstram homogeneidade e homocedasticidade. Assim, decidimos prosseguir com as análises.

##### ANOVA

```{r}
#| echo: false

anova(DF_1)
```

##### Comparação de médias

```{r}
#| echo: false

medias_DF_1 <- emmeans(DF_1, ~ TRATAMENTO)
medias_DF_1
```

```{r}
#| echo: false

cld(medias_DF_1,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_DF_1 <- agricolae::cv.model(DF_1) %>% 
  round(digits = 2)

CV_DF_1
```

#### Modelo para análise - DF, experimento 2

```{r}
#| echo: false

DF_E2 <- PE %>%   
  dplyr::select(EXPERIMENTO, TRATAMENTO, BLOCO, DESFOLHA) %>%    
  filter(EXPERIMENTO == 2)
```

```{r}
#| echo: false

DF_2 <- lm (DESFOLHA ~ TRATAMENTO + BLOCO,             
            data = DF_E2)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(DF_2)
check_heteroscedasticity(DF_2)
```

```{r}
#| echo: false

plot(simulateResiduals(DF_2))
```

Pelos resultados obtidos para as análises de normalidade e homocedasticidade, observamos que os dados atendem às pressuposições da ANOVA. Portanto, não serão necessárias transformações. Assim, podemos prosseguir a análise.

##### ANOVA

```{r}
#| echo: false

anova(DF_2)
```

##### Comparação de médias

```{r}
#| echo: false

medias_DF_2 <- emmeans(DF_2, ~ TRATAMENTO)
medias_DF_2
```

```{r}
#| echo: false

cld(medias_DF_2,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_DF_2 <- agricolae::cv.model(DF_2) %>% 
  round(digits = 2)

CV_DF_2
```

#### Tabela da DESFOLHA

```{r}
#| echo: false

cld_DF1 <- cld(medias_DF_1,
              Letters = LETTERS)

cld_DF2 <- cld(medias_DF_2,
              Letters = LETTERS)

table_DF_1 <- cld_DF1 %>% 
  dplyr::select(TRATAMENTO, emmean, .group) %>% 
  dplyr::arrange(TRATAMENTO)

table_DF_2 <- cld_DF2 %>% 
  dplyr::select(TRATAMENTO, emmean, .group)%>% 
  dplyr::arrange(TRATAMENTO) %>% 
  dplyr::mutate(TRATAMENTO = NULL)


linha_CV_2 <- c('CV (%)',CV_DF_1,' ',CV_DF_2,' ')

combined_table_df <- cbind(table_DF_1, table_DF_2)
combined_table_df2 <- rbind(combined_table_df, linha_CV_2)


colnames(combined_table_df2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')
  
opts <- options (knitr.kable.NA = "CV (%)")

knitr::kable(
    combined_table_df2,
    align = "ccccc",
    row.names=FALSE,
    booktabs = TRUE, valign = 't') %>%
  add_header_above(c(" "= 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>% 
  add_header_above(c("Desfolha" = 5))
```
