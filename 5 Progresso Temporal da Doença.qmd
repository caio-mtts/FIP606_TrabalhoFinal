---
title: "Progresso Temporal da Doença"
format: html
editor: visual
execute: 
  warning: false
  error: false
  freeze: true
---

## Modelagem do Progresso Temporal da Doença

Utilizar o pacote `epiffiter` para regressão não-linear de múltiplas epidemias

### Carregamento dos pacotes

```{r}
#| echo: false

library(gsheet) 
library(tidyverse) 
library(DT) 
library(patchwork) 
library(performance) 
library(emmeans)
library(DHARMa)
library(multcomp) 
library(multcompView) 
library(epifitter)
library(r4pde)
library(knitr)
library(kableExtra)
```

```{r}
#| echo: false
PTD <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1t1oOnimLXdx6rqtDiYg6wNXB2byY8_Z-/edit#gid=1737712336")

TRATAMENTO <- c("Controle", "Fungicida", "SiS + F", "F SiS F", "SiS F SiS", "SiS")
names(TRATAMENTO) <- c("1", "2", "3", "4", "5", "6") # Mapeando números para nomes de tratamentos

# Atualizar a variável TRATAMENTO no data frame PTD1_1$Data para os nomes dos tratamentos
PTD$TRATAMENTO <- factor(PTD$TRATAMENTO, levels = names(TRATAMENTO), labels = TRATAMENTO)

## Mudando os dados de percentagem para proporção
PTD = PTD |> 
  mutate(SEVERIDADE = SEVERIDADE/100)

## Selecionando os dados do Experimento 1
PTD1 <- PTD |> 
 dplyr::select(EXPERIMENTO, TEMPO, TRATAMENTO, BLOCO, SEVERIDADE) |>
  filter(EXPERIMENTO == "1")

## Selecionando os dados do Experimento 2
PTD2 <- PTD |> 
 dplyr::select(EXPERIMENTO, TEMPO, TRATAMENTO, BLOCO, SEVERIDADE) |>
  filter(EXPERIMENTO == "2")
```

### Ajuste de Modelos e escolha do melhor modelo

Escolha do melhor modelo por prevalência, RSE, CCC e menor erro entre o valor real e o predito

#### Ajustando o modelo para o Experimento 1

```{r}
## Ajustando o modelos de progressão temporal para cada epidemia do Experimento 1
PTD1_1 <- fit_multi(
  time_col = "TEMPO",
  intensity_col = "SEVERIDADE",
  data = PTD1,
  strata_cols = c("TRATAMENTO","BLOCO"),
  nlin = FALSE)

## Selecionar o modelo com base nos parâmetros CCC e RSE
PTD1_1$Parameters |>
  dplyr::select(TRATAMENTO, model, best_model, RSE, CCC)

## Selecionar o modelo com base na prevalência 
freq_best <- PTD1_1$Parameters %>% 
  filter(best_model == 1) %>% 
  group_by(TRATAMENTO, model) %>% 
  summarise(first = n()) %>%
  ungroup() |> 
  count(model) 
freq_best 

## Retornar as médias dos parâmetros da epidemia e dos parâmetros estatíticos do modelo escolhido
PTD1_1$Parameters |>
  filter(model == "Logistic")
```

O melhor modelo para as epidemias do experimento 1 foi o logístico

### Ajustando o modelo para o Experimento 2

```{r}
#| echo: false
## Ajustando o modelos de progressão temporal para cada epidemia do Experimento 2
PTD2_2 <- fit_multi(
  time_col = "TEMPO",
  intensity_col = "SEVERIDADE",
  data = PTD2,
  strata_cols = "TRATAMENTO", 
  nlin = FALSE)

## Selecionar o modelo com base nos parâmetros CCC e RSE
PTD2_2$Parameters |>
  dplyr::select(TRATAMENTO, model, best_model, RSE, CCC)

## Selecionar o modelo com base na prevalência 
freq_best <- PTD2_2$Parameters %>% 
  filter(best_model == 1) %>% 
  group_by(TRATAMENTO, model) %>% 
  summarise(first = n()) %>%
  ungroup() |> 
  count(model) 
freq_best

## Retornar as médias dos parâmetros da epidemia e dos parâmetros estatíticos do modelo escolhido
PTD2_2$Parameters |>
  filter(model == "Gompertz")
```

O melhor modelo para as epidemias do experimento 1 foi o de Gompertz

### Plot das Curvas de Progresso da Doença dos Modelos dos dois ensaios

```{r}
## Plot da curva de progresso da doença do Experimento 1
theme_set(r4pde::theme_r4pde(font_size = 10))

plot1 <- PTD1_1$Data |>
  filter(model %in% c("Logistic")) |> 
  ggplot(aes(time, predicted, shape = TRATAMENTO, color = TRATAMENTO)) +
  geom_point(aes(time, y)) +
  geom_line() +
  facet_wrap(~ model) +
   scale_color_manual(values = c("Controle" = "#222021", 
                                "Fungicida" = "#756B66", 
                                "SiS + Fungicida" = "#FCB108FF", 
                                "F SiS F" = "#AADC32FF", 
                                "SiS F SiS" = "#3B528BFF", 
                                "SiS" = "#472D7BFF")) +
  theme(legend.position = "none") +
  coord_cartesian(ylim = c(0, 1)) + # set the max to 0.6
  labs(
    shape = "Tratamento",
    color = "Tratamento", # Adicionando cor à legenda
    y = "Severidade da Doença",
    x = "Dias após emergência") + 
    geom_segment(aes(x = 42, xend = 42, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
  geom_segment(aes(x = 56, xend = 56, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
  geom_segment(aes(x = 72, xend = 72, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
 annotate("text", x = 40, y = 0.8, label = "1º aplicação", angle = 90, color = "black", size = 3, family = "Arial") +
 annotate("text", x = 54, y = 0.8, label = "2º aplicação", angle = 90, color = "black", size = 3, family = "Arial") +
 annotate("text", x = 70, y = 0.8, label = "3º aplicação", angle = 90, color = "black", size = 3, family = "Arial")

## Plot da curva de progresso da doença do Experimento 2
plot2 <- PTD2_2$Data |>
  filter(model %in% c("Gompertz")) |> 
  ggplot(aes(time, predicted, shape = TRATAMENTO, color = TRATAMENTO)) +
  geom_point(aes(time, y)) +
  geom_line() +
  facet_wrap(~ model) +
   scale_color_manual(values = c("Controle" = "#222021", 
                                "Fungicida" = "#756B66", 
                                "SiS + Fungicida" = "#FCB108FF", 
                                "F SiS F" = "#AADC32FF", 
                                "SiS F SiS" = "#3B528BFF", 
                                "SiS" = "#472D7BFF")) +
  theme(legend.position = "right") +
  coord_cartesian(ylim = c(0, 1)) + # set the max to 0.6
  labs(
    shape = "Tratamento",
    color = "Tratamento", # Adicionando cor à legenda
    y = "",
    x = "Dias após emergência") + 
    geom_segment(aes(x = 44, xend = 44, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
  geom_segment(aes(x = 58, xend = 58, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
  geom_segment(aes(x = 72, xend = 72, y = 0, yend = 80), linetype = "dashed", color = "#756B66") +
 annotate("text", x = 42, y = 0.8, label = "1º aplicação", angle = 90, color = "black", size = 3, family = "Arial") +
 annotate("text", x = 56, y = 0.8, label = "2º aplicação", angle = 90, color = "black", size = 3, family = "Arial") +
 annotate("text", x = 70, y = 0.8, label = "3º aplicação", angle = 90, color = "black", size = 3, family = "Arial")


Progressão_Temporal <- plot1|plot2
Progressão_Temporal
```

# Taxa de Progresso da Doença (r)

#### Modelo para análise, experimento 1

```{r}
#| echo: false

PTD1_1_1 <- fit_multi(
  time_col = "TEMPO",
  intensity_col = "SEVERIDADE",
  data = PTD1,
  strata_cols = c("TRATAMENTO","BLOCO"), 
  nlin = FALSE
)

PTD1_1_1$Parameters |>
  dplyr::select(TRATAMENTO, BLOCO, model, best_model, RSE, CCC)

PTD1_1_1 = PTD1_1_1$Parameters |>
  filter(model == "Logistic")

PTD1_1_1_r <- lm (r ~ TRATAMENTO + BLOCO,
          data = PTD1_1_1)

anova(PTD1_1_1_r)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(PTD1_1_1_r)
check_heteroscedasticity(PTD1_1_1_r)
```

##### Comparação de médias

```{r}
#| echo: false

medias_r_1 <- emmeans(PTD1_1_1_r, ~ TRATAMENTO, type = "response")
medias_r_1
```

```{r}
#| echo: false

cld(medias_r_1,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_PTD1_1_1_r <- agricolae::cv.model(PTD1_1_1_r) %>% 
  round(digits = 2)
CV_PTD1_1_1_r
```

#### Modelo para análise, experimento 2

```{r}
#| echo: false

PTD2_2_2 <- fit_multi(
  time_col = "TEMPO",
  intensity_col = "SEVERIDADE",
  data = PTD2,
  strata_cols = c("TRATAMENTO","BLOCO"), 
  nlin = FALSE
)

PTD2_2_2$Parameters |>
  dplyr::select(TRATAMENTO, BLOCO, model, best_model, RSE, CCC)

PTD2_2_2 = PTD2_2_2$Parameters |>
  filter(model == "Gompertz")

PTD2_2_2_r <- lm (r ~ TRATAMENTO + BLOCO,
          data = PTD2_2_2)

anova(PTD2_2_2_r)
```

##### Avaliação das premissas

```{r}
#| echo: false

check_normality(PTD2_2_2_r)
check_heteroscedasticity(PTD2_2_2_r)
```

##### Comparação de médias

```{r}
#| echo: false

medias_r_2 <- emmeans(PTD2_2_2_r, ~ TRATAMENTO, type = "response")
medias_r_2
```

```{r}
#| echo: false

cld(medias_r_2,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
#| echo: false

CV_PTD2_2_2_r <- agricolae::cv.model(PTD2_2_2_r) %>% 
  round(digits = 2)

CV_PTD2_2_2_r
```

##### Tabela da Taxa de Progresso da Doença

```{r}
#| echo: false

cld_DF1 <- cld(medias_r_1,
              Letters = LETTERS)

cld_DF2 <- cld(medias_r_2,
              Letters = LETTERS)

table_DF_1 <- cld_DF1 %>% 
  dplyr::select(TRATAMENTO, emmean, .group) %>% 
  dplyr::arrange(TRATAMENTO)

table_DF_2 <- cld_DF2 %>% 
  dplyr::select(TRATAMENTO, emmean, .group)%>% 
  dplyr::arrange(TRATAMENTO) %>% 
  dplyr::mutate(TRATAMENTO = NULL)


linha_CV_2 <- c('CV (%)',CV_PTD1_1_1_r,' ',CV_PTD2_2_2_r,' ')

combined_table_df <- cbind(table_DF_1, table_DF_2)
combined_table_df2 <- rbind(combined_table_df, linha_CV_2)


colnames(combined_table_df2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')
  
opts <- options (knitr.kable.NA = "CV (%)")

knitr::kable(
    combined_table_df2,
    align = "ccccc",
    row.names=FALSE,
    booktabs = TRUE, valign = 't') %>%
  add_header_above(c(" "= 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>% 
  add_header_above(c("Taxa de Progresso da Doença (r)" = 5))
```
